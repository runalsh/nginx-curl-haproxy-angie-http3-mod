name: build Nginx
on:
  workflow_dispatch:
  push:
    paths:
      - nginx/**
      - .github/workflows/nginx.yml
permissions:
  contents: write
jobs:
    build: 
        runs-on: ubuntu-latest
        #runs-on: [self-hosted, linux]
        strategy:
            matrix:
                build_env:
                - nginx: "1.27.1"
                  httpconnect: "0.0.7"
                  quiche: "0.22.0"
                  boring: "0568c2c"
                  quictls: "3.1.5"


        steps:
            - name: Checkout
              uses: actions/checkout@main

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
    
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3     

            - name: Build and push Nginx alpineopenssl ${{ matrix.build_env.nginx }} with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v6
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.alpineopenssl
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:openssl, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:openssl-${{ matrix.build_env.nginx }} , ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ matrix.build_env.nginx }} 
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}

            - name: Build and push Nginx ${{ matrix.build_env.nginx }} boringssl ${{ matrix.build_env.boring }} with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v6
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.alpineboringssl
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:boringssl, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:boringssl-${{ matrix.build_env.nginx }}
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}
                            BORINGSSL_COMMIT=${{ matrix.build_env.boring }}

            - name: Build and push Nginx ${{ matrix.build_env.nginx }} quictls ${{ matrix.build_env.quictls }}  with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v6
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.alpinequictls
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:quictls, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:quictls-${{ matrix.build_env.nginx }}
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}
                            QUICTLS_VERSION=${{ matrix.build_env.quictls }}

            - name: Build and push Nginx Deb ${{ matrix.build_env.nginx }} with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v6
              continue-on-error: true
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.builddeb
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:deb, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:deb-${{ matrix.build_env.nginx }}
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}
                
            - name: Create a container from the image Nginx ${{ matrix.build_env.nginx }} deb
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              continue-on-error: true
              run: |
                docker create --name nginx-${{ matrix.build_env.nginx }} ${{ secrets.DOCKERHUB_USERNAME }}/nginx:deb-${{ matrix.build_env.nginx }}
                docker cp nginx-${{ matrix.build_env.nginx }}:/tmp/nginx_${{ matrix.build_env.nginx }}_amd64.deb ./nginx_${{ matrix.build_env.nginx }}_amd64.deb
                ls -la 
                sudo apt-get install -y gh

            - name: Push Nginx ${{ matrix.build_env.nginx }} deb to release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              continue-on-error: true
              run: |
                  git config --global user.name '${{github.actor}}'
                  git config --global user.email '${{github.actor}}@users.noreply.github.com'
                  git tag -a v${{ matrix.build_env.nginx }} -m "nginx ${{ matrix.build_env.nginx }}"
                  git push origin v${{ matrix.build_env.nginx }}
                  gh release create v${{ matrix.build_env.nginx }} ./nginx_${{ matrix.build_env.nginx }}_amd64.deb -t "nginx ${{ matrix.build_env.nginx }}" -n "Release notes"
