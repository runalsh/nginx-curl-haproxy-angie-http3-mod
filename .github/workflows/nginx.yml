name: build Nginx
on:
  workflow_dispatch:
  push:
    paths:
      - nginx/**
permissions:
  contents: write
jobs:
    build: 
        runs-on: ubuntu-latest
        #runs-on: [self-hosted, linux]
        strategy:
            matrix:
                build_env:
                - nginx: "1.27.0"
                  httpconnect: "0.0.6"
                  quiche: "0.21.0"
                  boring: "0568c2c"
                  quictls: "3.1.5"


        steps:
            - name: Checkout
              uses: actions/checkout@main

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
    
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3     

            - name: Build and push Nginx alpineopenssl ${{ matrix.build_env.nginx }} with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v5
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.alpineopenssl
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:openssl, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:openssl-${{ matrix.build_env.nginx }} , ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ matrix.build_env.nginx }} 
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}

            - name: Build and push Nginx ${{ matrix.build_env.nginx }} boringssl ${{ matrix.build_env.boring }} with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v5
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.alpineboringssl
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:boringssl, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:boringssl-${{ matrix.build_env.nginx }}
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}
                            BORINGSSL_COMMIT=${{ matrix.build_env.boring }}

            - name: Build and push Nginx ${{ matrix.build_env.nginx }} quictls ${{ matrix.build_env.quictls }}  with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v5
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.alpinequictls
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:quictls, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:quictls-${{ matrix.build_env.nginx }}
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}
                            QUICTLS_VERSION=${{ matrix.build_env.quictls }}

            - name: Build and push Nginx Deb ${{ matrix.build_env.nginx }} with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v5
              continue-on-error: true
              with:
                context: ./nginx
                file: ./nginx/Dockerfile.builddeb
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:deb, ${{ secrets.DOCKERHUB_USERNAME }}/nginx:deb-${{ matrix.build_env.nginx }}
                build-args: |
                            NGINX_VERSION=${{ matrix.build_env.nginx }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}
                
            # - name: Get Nginx Deb
            #   shell: bash
            #   run:
            #     id=$(docker create runalsh/nginx:deb)
            #     echo $id
            #     echo "docker cp $id:/tmp/nginx_${{ matrix.build_env.nginx }}_amd64.deb - > nginx_${{ matrix.build_env.nginx }}_amd64.deb"
            #     docker cp $id:/tmp/nginx_${{ matrix.build_env.nginx }}_amd64.deb - > nginx_${{ matrix.build_env.nginx }}_amd64.deb  
            #     echo "docker rm $id"
            #     docker rm $id
            #     ls -la 

            # - name: Upload Nginx Deb to artifacts GH action
            #   uses: actions/upload-artifact@v4
            #   with:
            #     # name: nginx_${{ matrix.build_env.nginx }}_amd64.deb
            #     # path: /nginx_${{ matrix.build_env.nginx }}_amd64.deb
            #     name: test.file
            #     path: ./
            #     if-no-files-found: warn
            #     overwrite: true
            #     retention-days: 90

            # - name: Upload Nginx Deb to release
            #   uses: svenstaro/upload-release-action@v2
            #   with:
            #     repo_token: ${{ secrets.GITHUB_TOKEN }}
            #     file: ./test.file
            #     # file: nginx_${{ matrix.build_env.nginx }}_amd64.deb  
            #     # asset_name: mything
            #     tag: ${{ github.ref }}
            #     overwrite: true
            #     body: "nginx ${{ matrix.build_env.nginx }} deb package"
