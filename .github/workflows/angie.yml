name: build Angie
on:
  workflow_dispatch:
  push:
    paths:
      - angie/**
      - .github/workflows/angie.yml
permissions:
  contents: write
jobs:
    build: 
        runs-on: ubuntu-latest
        #runs-on: [self-hosted, linux]
        strategy:
            matrix:
                build_env:
                - httpconnect: "0.0.7"
                  quictls: "3.1.7"
                  angie: "1.8.1"

        steps:
            - name: Checkout
              uses: actions/checkout@main

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
    
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Angie ${{ matrix.build_env.angie }}
              uses: docker/build-push-action@v6
              with:
                context: ./angie
                file: ./angie/angie.dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/angie:latest, ${{ secrets.DOCKERHUB_USERNAME }}/angie:${{ matrix.build_env.angie }}
                build-args: |
                            ANGIE_VERSION=${{ matrix.build_env.angie }}

            - name: Build and push Angie ${{ matrix.build_env.angie }} with proxy_connect ${{ matrix.build_env.httpconnect }}  
              uses: docker/build-push-action@v6
              with:
                context: ./angie
                file: ./angie/angieproxy.dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/angie:proxy, ${{ secrets.DOCKERHUB_USERNAME }}/angie:proxy-${{ matrix.build_env.angie }}
                build-args: |
                            ANGIE_VERSION=${{ matrix.build_env.angie }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}    

            - name: Build and push Angie ${{ matrix.build_env.angie }} with proxy_connect ${{ matrix.build_env.httpconnect }} and quicktls ${{ matrix.build_env.quictls }}
              uses: docker/build-push-action@v6
              with:
                context: ./angie
                file: ./angie/angieproxyquicktls.dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/angie:proxy3, ${{ secrets.DOCKERHUB_USERNAME }}/angie:proxy3-${{ matrix.build_env.angie }}
                build-args: |
                            ANGIE_VERSION=${{ matrix.build_env.angie }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}   
                            QUICTLS_VERSION=${{ matrix.build_env.quictls }}

            - name: Build and push Angie DEB ${{ matrix.build_env.angie }} with proxy_connect ${{ matrix.build_env.httpconnect }}
              uses: docker/build-push-action@v6
              continue-on-error: true
              with:
                context: ./angie
                file: ./angie/angiedeb2.dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/angie:deb, ${{ secrets.DOCKERHUB_USERNAME }}/angie:deb-${{ matrix.build_env.angie }}
                build-args: |
                            ANGIE_VERSION=${{ matrix.build_env.angie }}
                            NGINX_HTTP_PROXY_CONNECT_MODULE=${{ matrix.build_env.httpconnect }}                   
 
            - name: Create a container from the image Angie ${{ matrix.build_env.angie }} deb
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              continue-on-error: true
              run: |
                docker create --name angie-${{ matrix.build_env.angie }} ${{ secrets.DOCKERHUB_USERNAME }}/angie:deb-${{ matrix.build_env.angie }}
                docker cp angie-${{ matrix.build_env.angie }}:/tmp/angie/angie_${{ matrix.build_env.angie }}-1~bookworm_amd64.deb ./angie_${{ matrix.build_env.angie }}-1_amd64.deb
                docker cp angie-${{ matrix.build_env.angie }}:/tmp/angie/angie-console-light.deb ./angie-console-light.deb
                ls -la 
                sudo apt-get install -y gh

            - name: Push Angie ${{ matrix.build_env.angie }} deb to release
              env:
                GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }} # ${{ secrets.GITHUB_TOKEN }}
                token: ${{ secrets.WORKFLOW_TOKEN }}
              continue-on-error: true
              run: |
                  git config --global user.name '${{github.actor}}'
                  git config --global user.email '${{github.actor}}@users.noreply.github.com'
                  git tag -a "Angie${{ matrix.build_env.angie }}" -m "Angie${{ matrix.build_env.angie }}"
                  git push origin "Angie${{ matrix.build_env.angie }}"
                  gh release create "Angie${{ matrix.build_env.angie }}" ./angie_${{ matrix.build_env.angie }}-1_amd64.deb ./angie-console-light.deb -t "Angie${{ matrix.build_env.angie }}" -n "Release notes"
