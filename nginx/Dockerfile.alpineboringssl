FROM alpine:3.16 as builder

ENV NGINX_VERSION 1.25.4
ENV NGINX_HTTP_PROXY_CONNECT_MODULE 0.0.6

ARG NGINX_VERSION
ARG NGINX_HTTP_PROXY_CONNECT_MODULE

RUN apk add --no-cache build-base wget ca-certificates openssl gnupg unzip make zlib-dev pkgconfig libtool cmake automake autoconf build-base linux-headers openssl-dev pcre-dev wget zlib-dev ca-certificates uwsgi uwsgi-python3 supervisor cmake samurai libunwind-dev linux-headers perl-dev libstdc++
RUN apk add --no-cache git

COPY --from=golang:alpine3.16 /usr/local/go/ /usr/local/go/
ENV PATH="/usr/local/go/bin:${PATH}"

RUN mkdir -p /tmp/build/nginx && \
    cd /tmp/build/nginx && \
    wget -O nginx-${NGINX_VERSION}.tar.gz https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
    tar -zxf nginx-${NGINX_VERSION}.tar.gz

RUN mkdir -p /tmp/build/module && \
    cd /tmp/build/module && \
    wget -O ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}.tar.gz https://github.com/chobits/ngx_http_proxy_connect_module/archive/refs/tags/v${NGINX_HTTP_PROXY_CONNECT_MODULE}.tar.gz && \
    tar -zxf ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}.tar.gz && \
    cd ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}

RUN cd /tmp/build/nginx/nginx-${NGINX_VERSION} && \
    patch -p1 < /tmp/build/module/ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}/patch/proxy_connect_rewrite_102101.patch

RUN mkdir -p /tmp/build/module && \
    cd /tmp/build/module && \
    git clone --depth=1 -b master https://github.com/google/boringssl.git
# may be change to dl http://github.com/google/boringssl/archive/refs/heads/master.zip

RUN cd /tmp/build/module/boringssl  && \
    mkdir build  && \
    cd build  && \
    cmake -GNinja ..  && \
    ninja  && \
    cd ../.. && \
    mkdir -p boringssl/.openssl/lib && \
    cp boringssl/build/crypto/libcrypto.a boringssl/build/ssl/libssl.a boringssl/.openssl/lib && \
    cd boringssl/.openssl && \
    ln -s ../include . && \
    touch '/tmp/build/module/boringssl/.openssl/include/openssl/ssl.h'

RUN cd /tmp/build/nginx && \
    wget -O nginx-${NGINX_VERSION}-hg-quic.tar.gz https://hg.nginx.org/nginx-quic/archive/release-${NGINX_VERSION}.tar.gz && \
    tar -zxf nginx-${NGINX_VERSION}-hg-quic.tar.gz

RUN apk add --no-cache libssl3 libcrypto3

RUN cd /tmp/build/nginx/nginx-quic-release-${NGINX_VERSION} && \
    ./auto/configure \
    --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules \
	--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log \
	--pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock \
	--http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
	--user=nginx --group=nginx \
	--with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-stream --with-stream_realip_module --with-compat --with-stream_ssl_module --with-stream_ssl_preread_module \
    --with-http_v2_module --with-http_v3_module \
    --with-debug \
    --with-cc-opt="-I/tmp/build/module/boringssl/include" \
    --with-ld-opt="-L/tmp/build/module/boringssl/build/ssl  -L/tmp/build/module/boringssl/build/crypto" \
	--add-module=/tmp/build/module/ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}

RUN cd /tmp/build/nginx/nginx-${NGINX_VERSION}-hg-quic && \
    make -j$proc && \
    make install

RUN mkdir -p /var/lock/nginx && \
    mkdir -p /var/cache/nginx && \
    mkdir -p /var/run/nginx && \
    addgroup -S nginx && \
    adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx

RUN /tmp/build/nginx/nginx-${NGINX_VERSION}-hg-quic/debian/build-nginx/objs/nginx -V

EXPOSE 80
EXPOSE 443

# ADD nginx.conf /etc/nginx/nginx.conf

# FROM alpine:3.16

# ENV NGINX_VERSION 1.25.4
# ENV NGINX_HTTP_PROXY_CONNECT_MODULE 0.0.6

# ARG NGINX_VERSION
# ARG NGINX_HTTP_PROXY_CONNECT_MODULE

# RUN apk update	&& \
# 	apk --no-cache add openssl pcre && \
#     rm -rf /var/lib/apt/lists/*

# COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
# COPY --from=builder /usr/local /usr/local
# COPY --from=builder /etc/nginx /etc/nginx
# COPY --from=builder /var/log/nginx /var/log/nginx
# COPY --from=builder /var/lock/nginx /var/lock/nginx
# COPY --from=builder /var/run/nginx /var/run/nginx

RUN addgroup -S nginx && \
    adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx

RUN ln -sf /dev/stdout /var/log/nginx/error.log && \
    ln -sf /dev/stdout /var/log/nginx/access.log
    
COPY nginx.conf /etc/nginx/nginx.conf

STOPSIGNAL SIGTERM

CMD ["nginx", "-g", "daemon off;"]   
# nginx -g 'daemon off;'









