FROM alpine:3.19 as builder

ENV NGINX_VERSION 1.25.5
ENV NGINX_HTTP_PROXY_CONNECT_MODULE 0.0.6

ARG NGINX_VERSION
ARG NGINX_HTTP_PROXY_CONNECT_MODULE

RUN apk add --no-cache build-base wget ca-certificates openssl gnupg unzip make zlib-dev pkgconfig libtool cmake automake autoconf build-base linux-headers openssl-dev pcre-dev wget zlib-dev ca-certificates uwsgi uwsgi-python3 supervisor
RUN apk add --no-cache libxslt-dev perl-dev geoip-dev
RUN mkdir -p /tmp/build/nginx && \
    cd /tmp/build/nginx && \
    # wget -O nginx-${NGINX_VERSION}.tar.gz https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
    # tar -zxf nginx-${NGINX_VERSION}.tar.gz
    wget -O nginx-${NGINX_VERSION}-hg-quic.tar.gz https://hg.nginx.org/nginx-quic/archive/release-${NGINX_VERSION}.tar.gz && \
    tar -zxf nginx-${NGINX_VERSION}-hg-quic.tar.gz

RUN ls -la /tmp/build/nginx

RUN mkdir -p /tmp/build/module && \
    cd /tmp/build/module && \
    wget -O ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}.tar.gz https://github.com/chobits/ngx_http_proxy_connect_module/archive/refs/tags/v${NGINX_HTTP_PROXY_CONNECT_MODULE}.tar.gz && \
    tar -zxf ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}.tar.gz && \
    cd ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}

RUN cd /tmp/build/nginx/nginx-quic-release-${NGINX_VERSION} && \
    patch -p1 < /tmp/build/module/ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}/patch/proxy_connect_rewrite_102101.patch

RUN ls -la /tmp/build/nginx/nginx-quic-release-${NGINX_VERSION}

RUN cd /tmp/build/nginx/nginx-quic-release-${NGINX_VERSION} && \
    ./auto/configure \
    --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules \
	--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log \
	--pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock \
	--http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
	--user=nginx --group=nginx \
	--with-http_ssl_module \
    --with-http_realip_module \
    --with-http_addition_module \
    --with-http_sub_module \
    --with-http_dav_module \
    # --with-http_flv_module \
    # --with-http_mp4_module \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_random_index_module \
    --with-http_secure_link_module \
    --with-http_stub_status_module \
    --with-http_auth_request_module \
    # --with-http_xslt_module=dynamic \
    # --with-http_image_filter_module=dynamic \
    # --with-http_geoip_module=dynamic \
    --with-threads \
    --with-stream \
    --with-stream_ssl_module \
    --with-stream_ssl_preread_module \
    --with-stream_realip_module \
    # --with-stream_geoip_module=dynamic \
    --with-http_slice_module \
    # --with-mail \
    # --with-mail_ssl_module \
    --with-compat \
    --with-file-aio \
    --with-http_v2_module \
    --with-http_v3_module \
    # --with-http_quic_module \
    # --with-stream_quic_module \
	--add-module=/tmp/build/module/ngx_http_proxy_connect_module-${NGINX_HTTP_PROXY_CONNECT_MODULE}

# RUN cd /tmp/build/nginx/nginx-quic-release-${NGINX_VERSION} && \
#     make -j $proc && \
#     make install

RUN cd /tmp/build/nginx/nginx-quic-release-${NGINX_VERSION} && \    
    make -j $proc && \
    # make install && \
    make install DESTDIR=/tmp/build/nginx/nginx-quic-release-build && \
    ls -la /tmp/build/nginx/nginx-quic-release-build

FROM alpine:3.19

ENV NGINX_VERSION 1.25.5
ENV NGINX_HTTP_PROXY_CONNECT_MODULE 0.0.6

ARG NGINX_VERSION
ARG NGINX_HTTP_PROXY_CONNECT_MODULE

RUN apk update	&& \
	apk --no-cache add openssl pcre && \
    rm -rf /var/lib/apt/lists/*

COPY --from=builder /tmp/build/nginx/nginx-quic-release-build/usr /usr
# COPY --from=builder /tmp/build/nginx/nginx-quic-release-build/var /var
COPY --from=builder /tmp/build/nginx/nginx-quic-release-build/etc /etc

# COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
# COPY --from=builder /usr/local /usr/local
# COPY --from=builder /etc/nginx /etc/nginx
# COPY --from=builder /var/log/nginx /var/log/nginx
# COPY --from=builder /var/lock/nginx /var/lock/nginx
# COPY --from=builder /var/run/nginx /var/run/nginx

# COPY --from=builder /tmp/build/nginx/nginx-quic-release-build/* /

RUN mkdir -p /var/lock/nginx && \
    mkdir -p /var/cache/nginx && \
    mkdir -p /var/run/nginx && \
    mkdir -p /var/run/nginx /var/run/nginx && \
    mkdir -p /var/lock/nginx /var/lock/nginx && \
    mkdir -p /var/log/nginx /var/log/nginx && \
    addgroup -S nginx && \
    adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx && \
    ln -sf /dev/stdout /var/log/nginx/error.log && \
    ln -sf /dev/stdout /var/log/nginx/access.log

COPY nginx/nginx.conf /etc/nginx/nginx.conf

RUN nginx -V; nginx -t

STOPSIGNAL SIGTERM

RUN chown -R --verbose nginx:nginx /var/run/

EXPOSE 80 443

USER nginx

CMD ["nginx", "-g", "daemon off;"]   
# nginx -g 'daemon off;'









